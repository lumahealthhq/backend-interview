{"version":3,"file":"ngb-date-adapter.js","sourceRoot":"","sources":["../../src/datepicker/ngb-date-adapter.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;;;;;;;;;;;gBASxC,UAAU;;;;yBATX;;SAUsB,cAAc;;IAkBM,wCAA6B;;;;IACrE;;;;OAIG;;;;;;IACH,wCAAS;;;;;IAAT,UAAU,IAAmB;QAC3B,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,GAAG,IAAI,CAAC;KACnH;IAED;;;;OAIG;;;;;;IACH,sCAAO;;;;;IAAP,UAAQ,IAAmB;QACzB,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,GAAG,IAAI,CAAC;KACnH;;gBAlBF,UAAU;;;;+BA3BX;EA4B0C,cAAc;SAA3C,oBAAoB","sourcesContent":["import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable()\nexport abstract class NgbDateAdapter<T> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   * @param  {any}     value any value that end user uses as the date model, ie: NgbDateStruct, Date, \"yyyy-mm-dd\"\n   * @return {NgbDateStruct}\n   */\n  abstract fromModel(value: T): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is suposed to be of the same type as fromModel() input-value param\n   * @param  {NgbDateStruct} date internal NgbDateStruct date representation\n   * @return {any}\n   */\n  abstract toModel(date: NgbDateStruct): T;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   * @param  {NgbDateStruct} value\n   * @return {NgbDateStruct}\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   * @param  {NgbDateStruct} value\n   * @return {NgbDateStruct}\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n}\n"]}