{"version":3,"sources":["../../src/datepicker/datepicker-navigation-select.ts"],"names":[],"mappings":"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","file":"datepicker-navigation-select.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\n\n\nexport class NgbDatepickerNavigationSelect implements OnChanges {\n  months: number[];\n  years: number[] = [];\n\n   date: NgbDate;\n   disabled: boolean;\n   maxDate: NgbDate;\n   minDate: NgbDate;\n\n   select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n, private calendar: NgbCalendar) { this.months = calendar.getMonths(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['maxDate'] || changes['minDate'] || changes['date']) {\n      this._generateYears();\n      this._generateMonths();\n    }\n  }\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  private _generateMonths() {\n    this.months = this.calendar.getMonths();\n\n    if (this.date && this.date.year === this.minDate.year) {\n      const index = this.months.findIndex(month => month === this.minDate.month);\n      this.months = this.months.slice(index);\n    }\n\n    if (this.date && this.date.year === this.maxDate.year) {\n      const index = this.months.findIndex(month => month === this.maxDate.month);\n      this.months = this.months.slice(0, index + 1);\n    }\n  }\n\n  private _generateYears() {\n    this.years = Array.from({length: this.maxDate.year - this.minDate.year + 1}, (e, i) => this.minDate.year + i);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    select {\n      /* to align with btn-sm */\n      padding: 0.25rem 0.5rem;\n      font-size: 0.875rem;      \n      line-height: 1.25;\n      /* to cancel the custom height set by custom-select */\n      height: inherit;\n      width: 50%;\n    }\n  `],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select d-inline-block\"\n      [value]=\"date?.month\"\n      (change)=\"changeMonth($event.target.value)\"\n      tabindex=\"-1\">\n        <option *ngFor=\"let m of months\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select d-inline-block\"\n      [value]=\"date?.year\"\n      (change)=\"changeYear($event.target.value)\"\n      tabindex=\"-1\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select> \n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}