{"version":3,"sources":["../../src/datepicker/datepicker-service.ts"],"names":[],"mappings":"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","file":"datepicker-service.js","sourceRoot":"","sourcesContent":["import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\nimport {Subject} from 'rxjs/Subject';\nimport {buildMonths, checkDateInRange, checkMinBeforeMax, isChangedDate, isDateSelectable} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operator/filter';\n\n\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _state: DatepickerViewModel =\n      {disabled: false, displayMonths: 1, firstDayOfWeek: 1, focusVisible: false, months: [], selectedDate: null};\n\n  get model$() { return filter.call(this._model$.asObservable(), model => model.months.length > 0); }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled: disabled});\n    }\n  }\n\n  set displayMonths(months: number) {\n    if (isInteger(months) && months > 0 && this._state.displayMonths !== months) {\n      this._nextState({displayMonths: months});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek: firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible: focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    if (date === undefined || this._calendar.isValid(date) && isChangedDate(this._state.maxDate, date)) {\n      this._nextState({maxDate: date});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled: markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    if (date === undefined || this._calendar.isValid(date) && isChangedDate(this._state.minDate, date)) {\n      this._nextState({minDate: date});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.months, this._state.focusDate)) {\n      this.select(this._state.focusDate);\n    }\n  }\n\n  open(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date)) {\n      this._nextState({firstDate: date});\n    }\n  }\n\n  select(date: NgbDate) {\n    const validDate = this.toValidDate(date, null);\n    if (!this._state.disabled && isChangedDate(this._state.selectedDate, validDate)) {\n      this._nextState({selectedDate: validDate});\n    }\n  }\n\n  toValidDate(date: {year: number, month: number, day?: number}, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (state.focusDate) {\n            day.context.focused = state.focusDate.equals(day.date) && state.focusVisible;\n          }\n\n          // override context disabled\n          if (state.disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (state.selectedDate !== undefined) {\n            day.context.selected = state.selectedDate !== null && state.selectedDate.equals(day.date);\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n          'maxDate' in patch || 'disabled' in patch;\n\n      const months = buildMonths(\n          this._calendar, state.months, startDate, state.minDate, state.maxDate, state.displayMonths,\n          state.firstDayOfWeek, state.markDisabled, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n    }\n\n    return state;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbCalendar, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}