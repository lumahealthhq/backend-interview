{"version":3,"sources":["../../src/datepicker/datepicker-tools.ts"],"names":[],"mappings":"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","file":"datepicker-tools.js","sourceRoot":"","sourcesContent":["import {NgbDate} from './ngb-date';\nimport {DayViewModel, MonthViewModel, NgbMarkDisabled} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return NgbDate.from(minDate);\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return NgbDate.from(maxDate);\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(months: MonthViewModel[], date: NgbDate) {\n  let selectable = false;\n  const month = months.find(curMonth => curMonth.year === date.year && curMonth.number === date.month);\n  if (month) {\n    month.weeks.find(week => {\n      const day = week.days.find(day => date.equals(day.date));\n      if (day && !day.context.disabled) {\n        selectable = true;\n      }\n      return !!day;\n    });\n  }\n\n  return selectable;\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, months: MonthViewModel[], date: NgbDate, minDate: NgbDate, maxDate: NgbDate,\n    displayMonths: number, firstDayOfWeek: number, markDisabled: NgbMarkDisabled, force: boolean): MonthViewModel[] {\n  const newMonths = [];\n  for (let i = 0; i < displayMonths; i++) {\n    const newDate = calendar.getNext(date, 'm', i);\n    const index = months.findIndex(month => month.firstDate.equals(newDate));\n\n    if (force || index === -1) {\n      newMonths.push(buildMonth(calendar, newDate, minDate, maxDate, firstDayOfWeek, markDisabled));\n    } else {\n      newMonths.push(months[index]);\n    }\n  }\n\n  return newMonths;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate, firstDayOfWeek: number,\n    markDisabled: NgbMarkDisabled): MonthViewModel {\n  const month:\n      MonthViewModel = {firstDate: null, lastDate: null, number: date.month, year: date.year, weeks: [], weekdays: []};\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    const days: DayViewModel[] = [];\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays.push(calendar.getWeekday(date));\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      days.push({\n        date: newDate,\n        context: {\n          date: {year: newDate.year, month: newDate.month, day: newDate.day},\n          currentMonth: month.number,\n          disabled: disabled,\n          focused: false,\n          selected: false\n        }\n      });\n\n      date = nextDate;\n    }\n\n    month.weeks.push(\n        {number: calendar.getWeekNumber(days.map(day => NgbDate.from(day.date)), firstDayOfWeek), days: days});\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const currentMonth = date.month;\n  let today = new NgbDate(date.year, date.month, date.day);\n  let yesterday = calendar.getPrev(today);\n\n  const firstDayOfCurrentMonthIsAlsoFirstDayOfWeek =\n      () => { return today.month !== yesterday.month && firstDayOfWeek === calendar.getWeekday(today); };\n\n  const reachedTheFirstDayOfTheLastWeekOfPreviousMonth =\n      () => { return today.month !== currentMonth && firstDayOfWeek === calendar.getWeekday(today); };\n\n  // going back in time\n  while (!reachedTheFirstDayOfTheLastWeekOfPreviousMonth() && !firstDayOfCurrentMonthIsAlsoFirstDayOfWeek()) {\n    today = new NgbDate(yesterday.year, yesterday.month, yesterday.day);\n    yesterday = calendar.getPrev(yesterday);\n  }\n\n  return today;\n}\n"]}