{"version":3,"sources":["../../src/rating/rating.ts"],"names":[],"mappings":"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","file":"rating.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nenum Key {\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n   max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n   rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n   readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n   resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n    starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n   hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n   leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n   rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, () => ({fill: 0}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbRatingConfig, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'max': [{ type: Input },],\n'rate': [{ type: Input },],\n'readonly': [{ type: Input },],\n'resettable': [{ type: Input },],\n'starTemplate': [{ type: Input },{ type: ContentChild, args: [TemplateRef, ] },],\n'hover': [{ type: Output },],\n'leave': [{ type: Output },],\n'rateChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}