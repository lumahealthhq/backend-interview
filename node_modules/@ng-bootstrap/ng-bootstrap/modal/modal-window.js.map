{"version":3,"sources":["../../src/modal/modal-window.ts"],"names":[],"mappings":"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","file":"modal-window.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n   backdrop: boolean | string = true;\n   keyboard = true;\n   size: string;\n   windowClass: string;\n\n   dismissEvent = new EventEmitter();\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() {\n    this._elWithFocus = document.activeElement;\n    this._renderer.addClass(document.body, 'modal-open');\n  }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  }\n\n  ngOnDestroy() {\n    const body = document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus['focus'].apply(elementToFocus, []);\n\n    this._elWithFocus = null;\n    this._renderer.removeClass(body, 'modal-open');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    'style': 'display: block;',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)'\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'backdrop': [{ type: Input },],\n'keyboard': [{ type: Input },],\n'size': [{ type: Input },],\n'windowClass': [{ type: Input },],\n'dismissEvent': [{ type: Output, args: ['dismiss', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}